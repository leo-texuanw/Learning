import React, {Component} from 'react'

// function Clock(props) {
//   return (
//     <div>
//       <h1> I'm a clock, and broken!</h1>
//       <h2> It is {props.date.toLocaleTimeString()}.</h2>
//     </div>
//   );
// }

class Clock extends React.Component {
  // 2: call constructor
  constructor(props) {
    super(props);
    this.state = {date: new Date()};
  }

  // 4:
  componentDidMount() {
    this.timeID = setInterval(
      () => this.tick(),
      1000
    );
  }

  // if Clock component is ever removed from the DOM, timer stopped
  componentWillUnmount() {
    clearInterval(this.timerID);
  }

  // 5:
  tick() {
    this.setState({
      date: new Date()
    });
    // 6: state changed, call render again
  }

  // 3: render
  render() {
    return (
      <div>
         <h1> I'm a clock, and working!</h1>
         <h2> It is {this.state.date.toLocaleTimeString()} now.</h2>
      </div>
    );
  }
}

class State extends Component {
  render() {
    /* 1: call Clock */
    return <Clock />;
  }
}

// setInterval(new State, 1000);

export default State;
